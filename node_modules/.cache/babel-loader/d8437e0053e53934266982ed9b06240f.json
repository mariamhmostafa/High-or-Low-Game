{"ast":null,"code":"var _jsxFileName = \"/Users/mariammostafa/IdeaProjects/High/highandlow/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@mui/material/Button';\nimport { TextField } from '@mui/material';\nimport { Container } from '@mui/material';\nimport { Alert } from '@mui/material';\nimport { Stack } from '@mui/material';\nimport { Transitions } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction input(props) {\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    className: \"outlined-number\",\n    onInput: props.onInput,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n\nclass guess extends React.Component {\n  constructor(props) {\n    super(props);\n    const guess = Math.random() * 100;\n  }\n\n  handleAnswer() {\n    if (input > guess) {\n      this.setState = 1;\n    } else if (input < guess) {\n      this.setState = 2;\n    } else {\n      this.setState = 3;\n    }\n  }\n\n  render() {\n    let button;\n\n    if (this.state == 1) {\n      button = /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"High!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this);\n    } else if (this.state == 2) {\n      button = /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"Low!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    } else {\n      button = /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess a number between 0 and 100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-number\",\n        label: \"Number\",\n        type: \"number\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mariammostafa/IdeaProjects/High/highandlow/src/App.js"],"names":["React","ReactDOM","Button","TextField","Container","Alert","Stack","Transitions","input","props","onInput","value","guess","Component","constructor","Math","random","handleAnswer","setState","render","button","state","App","shrink"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,KAAT,QAAqB,eAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AACjB,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,iBAArB;AAAuC,IAAA,OAAO,EAAEA,KAAK,CAACC,OAAtD;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKH;;AAED,MAAMC,KAAN,SAAoBZ,KAAK,CAACa,SAA1B,CAAmC;AACjCC,EAAAA,WAAW,CAACL,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,UAAMG,KAAK,GAAGG,IAAI,CAACC,MAAL,KAAc,GAA5B;AAED;;AAEDC,EAAAA,YAAY,GAAE;AACZ,QAAGT,KAAK,GAAGI,KAAX,EAAiB;AACf,WAAKM,QAAL,GAAgB,CAAhB;AACD,KAFD,MAEM,IAAGV,KAAK,GAAGI,KAAX,EAAiB;AACrB,WAAKM,QAAL,GAAgB,CAAhB;AACD,KAFK,MAED;AACH,WAAKA,QAAL,GAAgB,CAAhB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAE;AACN,QAAIC,MAAJ;;AACA,QAAG,KAAKC,KAAL,IAAc,CAAjB,EAAmB;AACjBD,MAAAA,MAAM,gBAAG,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACD,KAFD,MAEM,IAAG,KAAKC,KAAL,IAAc,CAAjB,EAAmB;AACvBD,MAAAA,MAAM,gBAAG,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACD,KAFK,MAED;AACHA,MAAAA,MAAM,gBAAG,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACD;;AAEA,wBACG;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAKF;;AAhCgC;;AAoCnC,SAASE,GAAT,GAAe;AACb,sBACE;AAAA,4BACA;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAOA,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,iBADP;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,eAAe,EAAE;AACfC,UAAAA,MAAM,EAAE;AADO;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KArBQD,G;AAyBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@mui/material/Button';\nimport { TextField } from '@mui/material';\nimport { Container } from '@mui/material';\nimport { Alert } from '@mui/material';\nimport { Stack} from '@mui/material';\nimport { Transitions } from '@mui/material';\n\n\nfunction input(props){\n    return(\n      <TextField className=\"outlined-number\" onInput={props.onInput}>\n        {props.value}\n      </TextField>\n    );\n}\n\nclass guess extends React.Component{\n  constructor(props){\n    super(props);\n    const guess = Math.random()*100;\n    \n  }\n\n  handleAnswer(){\n    if(input > guess){\n      this.setState = 1;\n    }else if(input < guess){\n      this.setState = 2;\n    }else{\n      this.setState = 3;\n    }\n  }\n\n  render(){\n    let button;\n    if(this.state == 1){\n      button = <Alert severity=\"info\">High!</Alert>\n    }else if(this.state == 2){\n      button = <Alert severity=\"info\">Low!</Alert>\n    }else{\n      button = <Alert severity=\"success\">correct!</Alert>\n    }\n\n     return(\n        <div>\n          {button}\n        </div>\n     )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div>\n    <header>\n      <h1>\n        Guess a number between 0 and 100\n        </h1>\n        </header>\n        \n    <Container maxWidth=\"sm\">\n      <TextField\n          id=\"outlined-number\"\n          label=\"Number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        /> \n    </Container>\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}